<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwConfigExceptions="true"
      internalLogLevel="info"
      internalLogFile="c:\temp\internal-nlog-AspNetCore3.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<target xsi:type="Database"
          name="String"
          dbProvider="Microsoft.Data.SqlClient.SqlConnection,Microsoft.Data.SqlClient"
          connectionString="${configsetting:item=ConnectionStrings.conn}"
          connectionStringName="conn"
          keepConnection="Boolean"
          isolationLevel="System.Data.IsolationLevel"
          dbDatabase="Layout"
          dbUserName="Layout"
          dbPassword="Layout"
          dbHost="Layout"
          commandType="Enum"
          commandText="Layout"
          installConnectionString="Layout">
			<install-command commandType="Enum"
							 connectionString="Layout"
							 ignoreFailures="Boolean"
							 text="Layout"/>
			<!-- repeated -->
			<uninstall-command commandType="Enum"
							   connectionString="Layout"
							   ignoreFailures="Boolean"
							   text="Layout"/>
			<!-- repeated -->
			<parameter name="String"
					  layout="Layout"
					  precision="Byte"
					  scale="Byte"
					  size="Integer"
					  dbType="DbType"
					  allowDbNull="Boolean"
					  format="string"
					  parameterType="Type" />
			<!-- repeated -->
		</target>
		<commandText>
			insert into dbo.LogKayitlari (
			Tablo, EskiVeri, YeniVeri, MACAdres,
			CreatedBy, CreatedDate
			) values (
			@Tablo, @EskiVeri, @YeniVeri, @MACAdres,
			@CreatedBy, @CreatedDate
			);
		</commandText>
		<parameter name="@Tablo" layout="AspNetCoreNlog" />
		<parameter name="@EskiVeri" layout="${EskiVeri}" />
		<parameter name="@YeniVeri" layout="${YeniVeri}" />
		<parameter name="@MACAdres" layout="${MACAdres}" />
		<parameter name="@CreatedBy" layout="${CreatedBy}" />
		<parameter name="@CreatedDate" layout="${longdate}" dbType="DateTime" />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="allfile" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<!-- BlackHole -->

		<logger name="*" minlevel="Trace" writeTo="ownFile-web" />
	</rules>
</nlog>
